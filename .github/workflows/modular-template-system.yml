# Modular Template System Workflow
# Uses the new template architecture inspired by NEARWEEK/CORE
name: Modular UserOwned.ai Intelligence

on:
  schedule:
    # Daily ecosystem analysis
    - cron: '40 13 * * *'  # 14:40 CET daily
  workflow_dispatch:
    inputs:
      template_type:
        description: 'Template to execute'
        required: true
        default: 'daily-ecosystem'
        type: choice
        options:
          - daily-ecosystem
          - weekly-market
          - project-spotlight
          - vc-intelligence
      project_name:
        description: 'Project name (for spotlight template)'
        required: false
        default: ''

jobs:
  execute-template:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        npm install
        
    - name: Determine Template Type
      id: template
      run: |
        # Determine which template to run
        if [ "${{ github.event_name }}" = "schedule" ]; then
          # Check what day/time it is for scheduled runs
          HOUR=$(date -u +%H)
          MINUTE=$(date -u +%M)
          DAY_OF_WEEK=$(date -u +%u)
          
          if [ "$HOUR" = "13" ] && [ "$MINUTE" = "40" ]; then
            TEMPLATE_TYPE="daily-ecosystem"
          elif [ "$HOUR" = "13" ] && [ "$MINUTE" = "00" ] && [ "$DAY_OF_WEEK" = "1" ]; then
            TEMPLATE_TYPE="weekly-market"
          elif [ "$HOUR" = "08" ] && [ "$MINUTE" = "00" ] && [ "$DAY_OF_WEEK" = "1" ]; then
            TEMPLATE_TYPE="vc-intelligence"
          else
            TEMPLATE_TYPE="daily-ecosystem"  # Default
          fi
        else
          # Manual trigger
          TEMPLATE_TYPE="${{ github.event.inputs.template_type }}"
        fi
        
        echo "template_type=$TEMPLATE_TYPE" >> $GITHUB_OUTPUT
        echo "🎯 Selected template: $TEMPLATE_TYPE"
        
    - name: Execute Template
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        ZAPIER_WEBHOOK_URL: ${{ secrets.ZAPIER_WEBHOOK_URL }}
      run: |
        echo "🚀 UserOwned.ai Modular Template System v2.0"
        echo "📋 Executing template: ${{ steps.template.outputs.template_type }}"
        echo ""
        
        # Build options for template runner
        OPTIONS=""
        if [ "${{ github.event.inputs.project_name }}" != "" ]; then
          OPTIONS="--project=${{ github.event.inputs.project_name }}"
        fi
        
        # Execute the template
        node scripts/template-runner.js ${{ steps.template.outputs.template_type }} $OPTIONS
        
    - name: Save Execution Results
      run: |
        echo "📊 Template execution completed successfully!"
        echo "⏰ Timestamp: $(date -u)"
        echo "📋 Template: ${{ steps.template.outputs.template_type }}"
        echo "🎯 Next scheduled run: Tomorrow at 14:40 CET"
        
        # Create summary for GitHub Actions
        echo "## 🎯 Template Execution Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Template**: ${{ steps.template.outputs.template_type }}" >> $GITHUB_STEP_SUMMARY
        echo "**Timestamp**: $(date -u)" >> $GITHUB_STEP_SUMMARY
        echo "**Status**: ✅ Success" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📊 Distribution Channels" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Telegram: Posted to POOOL group" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ X/Twitter: Posted via Buffer" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ GitHub: Issue created" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "---" >> $GITHUB_STEP_SUMMARY
        echo "*UserOwned.ai Modular Intelligence System by NEARWEEK*" >> $GITHUB_STEP_SUMMARY