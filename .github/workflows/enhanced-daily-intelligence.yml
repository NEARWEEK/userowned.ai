# Enhanced UserOwned.ai Daily Intelligence
# Upgraded to match NEARWEEK/CORE quality standards
name: Enhanced UserOwned.ai Intelligence

on:
  schedule:
    - cron: '40 13 * * *'  # Daily at 14:40 CET
  workflow_dispatch:

jobs:
  enhanced-ai-crypto-intelligence:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js for Enhanced Processing
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        npm init -y
        npm install --save-dev @types/node
        
    - name: Run Enhanced Intelligence Engine
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "üöÄ Enhanced UserOwned.ai Intelligence Engine Starting..."
        node scripts/enhanced-intelligence.js
        
    - name: Process Results for Distribution
      run: |
        echo "üìä Processing enhanced intelligence results..."
        
        # Read the generated report
        INTELLIGENCE_REPORT=$(cat /tmp/intelligence_report.txt)
        ECOSYSTEM_DATA=$(cat /tmp/ecosystem_data.json)
        
        # Extract top 3 scores for summary
        TOP_NEAR=$(echo "$ECOSYSTEM_DATA" | jq -r '.[] | select(.symbol == "NEAR") | .score')
        TOP_ICP=$(echo "$ECOSYSTEM_DATA" | jq -r '.[] | select(.symbol == "ICP") | .score')
        TOP_TAO=$(echo "$ECOSYSTEM_DATA" | jq -r '.[] | select(.symbol == "TAO") | .score')
        
        # Create enhanced Telegram content
        cat > /tmp/telegram_enhanced.txt << EOF
ü§ñ Enhanced User-Owned AI Intelligence

üèÜ AI Ecosystem Comprehensive Scores:
1. NEAR Protocol: ${TOP_NEAR}/100 ‚≠ê
2. Internet Computer: ${TOP_ICP}/100 üî¨ 
3. Bittensor: ${TOP_TAO}/100 üß†

üìä Multi-Source Analysis:
‚Ä¢ GitHub development velocity
‚Ä¢ DeFi TVL performance 
‚Ä¢ On-chain adoption metrics
‚Ä¢ DApp ecosystem usage

üî≠ Enhanced with NEARWEEK/CORE methodology
üìà Full analysis: userowned.ai
üîó @userownedai | @NEARWEEK
EOF
        
        # Create enhanced X content
        cat > /tmp/x_enhanced.txt << EOF
ü§ñ Enhanced UserOwned.ai Intelligence

üèÜ AI x Crypto Ecosystem Rankings (Multi-Source):
1. NEAR: ${TOP_NEAR}/100 ‚≠ê - Complete AI infrastructure
2. ICP: ${TOP_ICP}/100 üî¨ - On-chain AI hosting
3. TAO: ${TOP_TAO}/100 üß† - Pure AI protocol

üìä Enhanced methodology:
‚Ä¢ 4+ data sources
‚Ä¢ Professional calculations
‚Ä¢ VC-grade insights

üî≠ Powered by NEARWEEK intelligence
üìà userowned.ai

#UserOwnedAI #NEAR #ICP #Bittensor #AI #Crypto
EOF
        
        echo "TELEGRAM_CONTENT<<EOF" >> $GITHUB_ENV
        cat /tmp/telegram_enhanced.txt >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        
        echo "X_CONTENT<<EOF" >> $GITHUB_ENV
        cat /tmp/x_enhanced.txt >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        
        echo "FULL_REPORT<<EOF" >> $GITHUB_ENV
        echo "$INTELLIGENCE_REPORT" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Post Enhanced Report to Telegram
      if: ${{ secrets.TELEGRAM_BOT_TOKEN && secrets.TELEGRAM_CHAT_ID }}
      run: |
        echo "üì± Posting enhanced intelligence to Telegram..."
        
        curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -H "Content-Type: application/json" \
          -d "{
            \"chat_id\": \"${{ secrets.TELEGRAM_CHAT_ID }}\",
            \"text\": \"$TELEGRAM_CONTENT\",
            \"parse_mode\": \"HTML\",
            \"disable_web_page_preview\": true
          }"
        
        echo "‚úÖ Enhanced report posted to Telegram"

    - name: Post to X via Buffer (Enhanced)
      run: |
        echo "üê¶ Posting enhanced content to X via Buffer..."
        
        if [ -n "${{ secrets.ZAPIER_WEBHOOK_URL }}" ]; then
          curl -s -X POST "${{ secrets.ZAPIER_WEBHOOK_URL }}" \
            -H "Content-Type: application/json" \
            -d "{
              \"text\": \"$X_CONTENT\",
              \"source\": \"userowned-ai-enhanced\",
              \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\",
              \"version\": \"enhanced\"
            }"
          
          echo "‚úÖ Enhanced content sent to Buffer for X posting"
        else
          echo "‚ö†Ô∏è No Zapier webhook configured"
        fi
        
    - name: Create Intelligence Report Issue
      uses: actions/github-script@v7
      with:
        script: |
          const title = `ü§ñ Daily AI Intelligence Report - ${new Date().toISOString().split('T')[0]}`;
          const body = `## Enhanced UserOwned.ai Intelligence Report

### üìà Generated: ${new Date().toISOString()}

${{ env.FULL_REPORT }}

---

**Methodology**: Multi-source analysis combining GitHub development metrics, DeFi TVL data, on-chain adoption signals, and DApp ecosystem usage.

**Data Sources**: 
- GitHub API (development velocity)
- DefiLlama (financial metrics)
- On-chain analytics (adoption)
- DApp ecosystem data

**Next Report**: Tomorrow at 14:40 CET

*Enhanced UserOwned.ai Intelligence by NEARWEEK*`;
          
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: title,
            body: body,
            labels: ['intelligence-report', 'daily', 'enhanced']
          });
        
    - name: Display Enhanced Results
      run: |
        echo "üéØ Enhanced UserOwned.ai Intelligence Report Completed!"
        echo ""
        echo "üî≠ ENHANCEMENTS DEPLOYED:"
        echo "‚Ä¢ Node.js calculation engine"
        echo "‚Ä¢ Multi-source data verification"
        echo "‚Ä¢ Professional error handling"
        echo "‚Ä¢ Enhanced scoring algorithm"
        echo "‚Ä¢ NEARWEEK/CORE methodology"
        echo ""
        echo "üìà INTELLIGENCE SUMMARY:"
        echo "$FULL_REPORT" | head -20
        echo ""
        echo "‚úÖ Enhanced automation operational!"
        echo "üì± Telegram: Enhanced reporting"
        echo "üê¶ X: Professional analysis"
        echo "üöÄ Next enhancement: Backend API (Week 2)"